# 2 pointer approach O(N) time, O(1)Space 
# Utilizes the fact that the sell action is always after the buy action
class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        i=0
        j=i+1
        profit=0
        while j < len(prices):
            if(prices[j]-prices[i]>max(0,profit)):
                profit=prices[j]-prices[i]
            if(prices[j]<prices[i]):
                i=j
            j+=1
        return profit
