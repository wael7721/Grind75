Time Complexity O(N), Space Complexity O(1)
class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        if( head is None or head.next is None):
            return False

        slow=head
        fast=head.next

        while(fast is not None):
            if(slow==fast):return True
            if(fast.next is None):return False
            fast=fast.next.next
            slow=slow.next
        return False
