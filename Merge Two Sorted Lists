# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
#Space complexity O(1), no extra space used, Time Complexity O(N+M):m is length of list1 and n is length of list2
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        list3=ListNode(0)
        cur=list3
        while list1 and list2:
                if(list1.val>list2.val):
                    cur.next=list2
                    list2=list2.next
                else:
                    cur.next=list1
                    list1=list1.next
                cur=cur.next
        if list1:
            cur.next=list1
        else:
            cur.next=list2
        return list3.next
