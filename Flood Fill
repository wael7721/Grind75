#Matrix Traversal problem, Time complexity  O(M*N), Space complexity O(m*n)
class Solution:
    def floodFill(self, image: List[List[int]], sr: int, sc: int, color: int) -> List[List[int]]:
        if image[sr][sc]==color: return image
        findallconnected(image,sr,sc,image[sr][sc],color)
        return image

def findallconnected(image,y,x,oldColor,color):
    if y < 0 or y >= len(image) or x < 0 or x >= len(image[0]) or image[y][x] != oldColor:
        return
    image[y][x]=color

    findallconnected(image,y,x+1,oldColor,color)

    findallconnected(image,y,x-1,oldColor,color)

    findallconnected(image,y-1,x,oldColor,color)

    findallconnected(image,y+1,x,oldColor,color)
    
